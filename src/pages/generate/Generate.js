import React, { useState } from 'react';
import { Configuration, OpenAIApi } from "openai";

function Generate(props) {

    const configuration = new Configuration({
        apiKey: process.env.REACT_APP_OPENAI_API_KEY,
    });
    const openai = new OpenAIApi(configuration);

    const [prompt, setPrompt] = useState("");
    const [image, setImage] = useState("");
    const [loading, setLoading] = useState(false);

    const generateImage = async () => {
        setLoading(true);

        await openai.createImage({
            prompt: prompt,
            n: parseInt(1),
            size: "512x512",
        }).then(res => {
            setImage(res.data.data[0].url);
            console.log(res.data.data[0].url);
            setLoading(false);
        }).catch(err => {
            console.log(err);
        });
    }


    return (
        <>
            <div className="flex min-h-screen flex-col justify-center bg-[#0a1120] bg-[url('https://mini.codingcodax.dev/images/dark-beams.jpg')] bg-[length:86.125rem] bg-bottom bg-no-repeat p-4">
                <div className="yinset-0 bg-[url('https:https://snippets.alexandru.so///mini.codingcodax.dev/images/dark-grid.svg')]"></div>
                {(image && loading === false) ? <img className='mx-auto my-6' src={image} alt="Document generated by the AI" /> : <span className='text-2xl text-white mb-28 mx-auto'>... wait a second at each generation ...</span>}
                <span className='text-2xl text-white mb-4 mx-auto'>"White everything that comes to your mind. My IA will generate your NFT picture"</span>
                <div className="mx-auto w-screen-sm">

                    <div className="relative flex h-10 w-full flex-row-reverse overflow-clip rounded-lg">
                        <input onChange={(e) => setPrompt(e.target.value)} className="peer w-full rounded-r-lg border border-slate-400 px-2 text-slate-900 placeholder-slate-400 transition-colors duration-300 focus:border-sky-400 focus:outline-none" type="text" name="domain" id="domain" placeholder="whatever you want" />
                        <button
                            type="button"
                            className="border border-pink-600 bg-pink-600 text-white px-2 rounded-tl-md rounded-bl-md transition duration-500 ease select-none hover:bg-pink-800 focus:outline-none focus:shadow-outline"
                            onClick={generateImage}
                        >
                            Generate
                        </button>
                    </div>
                </div>
            </div>
        </>
    );
}

export default Generate;